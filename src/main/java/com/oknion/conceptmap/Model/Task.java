package com.oknion.conceptmap.Model;

// Generated Oct 21, 2014 3:41:47 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name = "task")
public class Task implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer taskId;
	private Conceptmap conceptmap;
	private Date deadLine;
	private String taskDescription;
	private String taskName;
	private Set<Conceptmap> conceptmaps = new HashSet<Conceptmap>(0);
	private Set<User> users = new HashSet<User>(0);
	private User ownUser;

	@Column(name = "forclass")
	public String getForclass() {
		return forclass;
	}

	public void setForclass(String forclass) {
		this.forclass = forclass;
	}

	private String forclass;
	private boolean hethan = false;

	@Transient
	public boolean isHethan() {
		return hethan;
	}

	public void setHethan(boolean hethan) {
		this.hethan = hethan;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@ManyToOne
	@JoinColumn(name = "ownUserId", nullable = false)
	public User getOwnUser() {
		return ownUser;
	}

	public void setOwnUser(User ownUser) {
		this.ownUser = ownUser;
	}

	public Task() {
	}

	public Task(String taskDescription, String taskName) {
		this.taskDescription = taskDescription;
		this.taskName = taskName;
	}

	public Task(Conceptmap conceptmap, Date deadLine, String taskDescription,
			String taskName, Set<Conceptmap> conceptmaps, Set<User> users) {
		this.conceptmap = conceptmap;
		this.deadLine = deadLine;
		this.taskDescription = taskDescription;
		this.taskName = taskName;
		this.conceptmaps = conceptmaps;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "taskId", unique = true, nullable = false)
	public Integer getTaskId() {
		return this.taskId;
	}

	public void setTaskId(Integer taskId) {
		this.taskId = taskId;
	}

	@ManyToOne
	@JoinColumn(name = "ansCmId")
	public Conceptmap getConceptmap() {
		return this.conceptmap;
	}

	public void setConceptmap(Conceptmap conceptmap) {
		this.conceptmap = conceptmap;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deadLine", length = 19)
	public Date getDeadLine() {
		return this.deadLine;
	}

	public void setDeadLine(Date deadLine) {
		this.deadLine = deadLine;
	}

	@Column(name = "taskDescription", nullable = false)
	public String getTaskDescription() {
		return this.taskDescription;
	}

	public void setTaskDescription(String taskDescription) {
		this.taskDescription = taskDescription;
	}

	@Column(name = "taskName", nullable = false, length = 50)
	public String getTaskName() {
		return this.taskName;
	}

	public void setTaskName(String taskName) {
		this.taskName = taskName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
	public Set<Conceptmap> getConceptmaps() {
		return this.conceptmaps;
	}

	public void setConceptmaps(Set<Conceptmap> conceptmaps) {
		this.conceptmaps = conceptmaps;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "taskstu", joinColumns = { @JoinColumn(name = "taskId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "stuId", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
